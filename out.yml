AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Lambda application that calls the Lambda API.
Resources:
  ServerlessProducer:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.6
      FunctionName: ServerlessProducer
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      CodeUri: s3://lambda-artifacts-316813cd846d7576/399aca5af86296d7207f41bfe55acdf0
      Description: Call the AWS Lambda API
      Timeout: 10
      Layers:
      - Ref: libsServerlessProducer
  libsServerlessProducer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: blank-python-libServerlessProducer
      Description: Dependencies for the blank-python sample app.
      ContentUri: s3://lambda-artifacts-316813cd846d7576/7bc879021d3dc35ed03b470df32de368
      CompatibleRuntimes:
      - python3.6
  ProducerAI:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.6
      FunctionName: ProducerAI
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      CodeUri: s3://lambda-artifacts-316813cd846d7576/1ce5c5f15adb90ebd7a69652e96cd1ce
      Description: Call the AWS Lambda API
      Timeout: 10
      Layers:
      - Ref: libsProducerAI
  libsProducerAI:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: blank-python-libProducerAI
      Description: Dependencies for the blank-python sample app.
      ContentUri: s3://lambda-artifacts-316813cd846d7576/7efcb8b12b9898f78c2bebc865b5d54d
      CompatibleRuntimes:
      - python3.6
  Producer:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: producer
      DelaySeconds: 0
      VisibilityTimeout: 120
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaExecutionRole
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: AdministratorAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: '*'
            Resource: '*'
  fangTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: name
        AttributeType: S
      KeySchema:
      - AttributeName: name
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
      TableName: fang
  fangsentimentdepp:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: fangsentiment-depp
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
  5MinuteTimer:
    Type: AWS::Events::Rule
    Properties:
      Name: 5MinuteTimer
      Description: This plays every 5 minutes
      ScheduleExpression: rate(5 minutes)
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - ServerlessProducer
          - Arn
        Id: ServerlessProducer
  ProducerAIEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn:
        Fn::GetAtt:
        - Producer
        - Arn
      FunctionName:
        Fn::GetAtt:
        - ProducerAI
        - Arn
  5MinuteTimerPermission2Lambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: ServerlessProducer
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - 5MinuteTimer
        - Arn
